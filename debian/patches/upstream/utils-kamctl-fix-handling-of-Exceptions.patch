From 5f6f4331811e654e75b49263f8fb823bea9874a3 Mon Sep 17 00:00:00 2001
From: Victor Seva <linuxmaniac@torreviejawireless.org>
Date: Mon, 4 May 2020 11:33:12 +0200
Subject: [PATCH] utils/kamctl: fix handling of Exceptions

> Traceback (most recent call last):
>   File "/usr/lib/x86_64-linux-gnu/kamailio/kamctl/dbtextdb/dbtextdb.py", line 1239, in <module>
>     main(sys.argv)
>   File "/usr/lib/x86_64-linux-gnu/kamailio/kamctl/dbtextdb/dbtextdb.py", line 1233, in main
>     except (Error, e):
> NameError: name 'e' is not defined

(cherry picked from commit 1aca79c43cb8dbd920c1eb81c0c30cf89f0985b9)
---
 utils/kamctl/dbtextdb/dbtextdb.py | 22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git a/utils/kamctl/dbtextdb/dbtextdb.py b/utils/kamctl/dbtextdb/dbtextdb.py
index 3a35554013..3d5ee7ecc5 100755
--- a/utils/kamctl/dbtextdb/dbtextdb.py
+++ b/utils/kamctl/dbtextdb/dbtextdb.py
@@ -356,7 +356,7 @@ class DBText(object):
         # test that the value is string, if not return it as is
         try:
             value.find('a')
-        except:
+        except Exception:
             return value
 
         escaped = value
@@ -377,7 +377,7 @@ class DBText(object):
         # test that the value is string, if not return it as is
         try:
             value.find('a')
-        except:
+        except Exception:
             return value
 
         escaped = value
@@ -988,21 +988,19 @@ class DBText(object):
         if not val and not self.header[col]['null']:
             raise ExecuteError(col + ' cannot be empty or null')
 
-        if (self.header[col]['type'].lower() == 'int' or
-           self.header[col]['type'].lower() == 'double'):
+        hdr_t = self.header[col]['type'].lower()
+        if hdr_t == 'int' or hdr_t == 'double':
             try:
                 if val:
                     val = eval(val)
-            except (NameError, e):
+            except NameError as e:
                 raise ExecuteError('Failed to parse %s in %s '
                                    '(unable to convert to type %s): %s' %
-                                   (col, self.table, self.header[col]['type'],
-                                    e))
-            except (SyntaxError, e):
+                                   (col, self.table, hdr_t, e))
+            except SyntaxError as e:
                 raise ExecuteError('Failed to parse %s in %s '
                                    '(unable to convert to type %s): %s' %
-                                   (col, self.table, self.header[col]['type'],
-                                    e))
+                                   (col, self.table, hdr_t, e))
 
         return val
 
@@ -1083,7 +1081,7 @@ class DBText(object):
             # save a copy of the data before modifying
             self.orig_data = self.data[:]
 
-        except (IOError, e):
+        except IOError as e:
             raise ExecuteError('Unable to open table %s: %s' % (self.table, e))
 
         Debug('Header is: %s' % self.header)
@@ -1230,7 +1228,7 @@ def main(argv):
                     print('Updated %s, rows affected: %d' % (conn.table, row))
                 else:
                     print(row)
-    except (Error, e):
+    except Error as e:
         print(e)
         sys.exit(1)
 
-- 
2.26.2

